/*
Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

The brackets must close in the correct order, "()" and "()[]{}" are all valid but "(]" and "([)]" are not.
*/


class Solution {
public:
    bool isValid(string s) {
        if((s.size()) == 0){
            return false;
        }
        vector<char> str;
        for(int i = 0; i < s.size(); i++){
            if((s[i] == '(') || (s[i] == '{') || (s[i] == '[')){
                str.push_back(s[i]);
            }
            else{
                if( ((s[i] == ')') || (s[i] == '}') || (s[i] == ']')) && (str.size() == 0)){
                    return false;
                }
                switch(s[i]){
                case ')':
                    if(str[str.size() - 1] == '('){
                        str.pop_back();
                    }
                    else{
                        return false;
                    }                    
                    break;
                case '}':
                    if(str[str.size() - 1] == '{'){
                        str.pop_back();
                    }
                    else{
                        return false;
                    }                    
                    break;
                case ']':
                    if(str[str.size() - 1] == '['){
                        str.pop_back();
                    }
                    else{
                        return false;
                    }                    
                    break;
                default:break;
                }
            
            }
        }
        return str.size() == 0 ? true : false;
    }
};
